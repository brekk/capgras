import { prompt } from "Clinic"
import Buffer from "Clinic/Buffer"
import { clear } from "Clinic/Constants"
import File from "File"
import IO from "IO"
import JP from "Json/Parse"
import List from "List"
import { fromMaybe } from "Maybe"
import Process from "Process"
import Wish from "Wish"

import { processDependencies, readMadlibJson } from "@/Capgras"
import { madJson } from "@/Parse"



printAndKill :: Show a => String -> a -> {}
printAndKill = (p, x) => {
  clear()
  IO.trace(p, x)
  Process.exit(0)
}
/*
  b = Buffer.make("")
  pipe(
    prompt("Favorite color?"),
    Wish.fulfill(printAndKill("ERROR"), printAndKill("OUTPUT")),
  )(b)
  */
main = (argv) => {
  // pipe(
  //   List.nth(1),
  //   map(
  //     readMadlibJson,
  //     map(
  //       pipe(
  //         .dependencies,
  //         processDependencies,
  //       ),
  //     ),
  //   ),
  //   fromMaybe(Wish.bad(IO.UnknownError)),
  //   Wish.fulfill((e) => { IO.pTrace("ERROR", e) }, (x) => { IO.pTrace("SUCCESS", x) }),
  // )(argv)
}
