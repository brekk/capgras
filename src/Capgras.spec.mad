import { Left, Right } from "Either"
import IO from "IO"
import { Just, Nothing } from "Maybe"
import Process from "Process"
import { assertEquals, test } from "Test"
import Wish from "Wish"

import { processDependencies, processDependency, readMadlibJson } from "./Capgras"



test(
  "readMadlibJson",
  () => do {
    consumer = where {
      Right(r) =>
        do {
          IO.trace("RAW", r)
          return Just(r)
        }

      _ =>
        Nothing
    }
    x = assertEquals(false, false)
    pipe(
      IO.trace("location!"),
      readMadlibJson,
      map(IO.trace("parsed?")),
      map(consumer),
      map(IO.trace("consumed?")),
      Wish.fulfill(
        () => {},
        (r) => {
          x := assertEquals(
            r,
            Just({
              dependencies: Just([
                {
                  description: "MadMarkdownRenderer",
                  minVersion: "2.0.4",
                  url: "https://github.com/madlib-lang/madmarkdown-renderer/archive/refs/tags/v2.0.4.zip",
                },
                {
                  description: "MadUI",
                  minVersion: "7.0.2",
                  url: "https://github.com/madlib-lang/madui/archive/refs/tags/v7.0.2.zip",
                },
              ]),
              madlibVersion: Just("0.23.14"),
              main: "src/Main.mad",
              name: "MadDoc",
              version: "0.0.9",
            }),
          )
        },
      ),
    )(Process.getCurrentWorkingDirectory() ++ "/src/fixture.json")
    return x
  },
)

// test("processDependencies", () => assertEquals(processDependencies, ))
// test("processDependency", () => assertEquals(processDependency, ))
